name: Infrastructure Provisioning

on:
  workflow_call:
    inputs:
      skip_apply:
        description: "Skips the apply step, for use with pr"
        type: boolean
        required: true
        default: false
permissions:
  id-token: write
  contents: read

jobs:
  terraform_provision:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    env:
      #  Variables
      TF_VAR_location: ${{ vars.location }}
      TF_VAR_resource_group_name: ${{ vars.prefix }}-rg
      TF_VAR_author_name: ${{vars.author_name}}

      #  Secrets
      TF_VAR_psql_admin_username: ${{secrets.psql_admin_username}}
      TF_VAR_psql_admin_password: ${{secrets.psql_admin_password}}
      TF_VAR_subscription_id: ${{secrets.subscription_id}}

      # Remote State Configs
      storage_account_name: ${{secrets.storage_account_name}}
      container_name: ${{secrets.container_name}}
      key: ${{secrets.key}}
      resource_group_name: ${{secrets.resource_group_name}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-region: "us-east-1"
          aws-access-key-id: ${{secrets.aws_access_key}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Prepare state.config file
        run: |
          echo "Creating config file.."
          echo "storage_account_name=\"${{secrets.storage_account_name}}\"" >> state.config
          echo "container_name=\"${{secrets.container_name}}\"" >> state.config
          echo "key=\"${{secrets.key}}\"" >> state.config
          echo "resource_group_name=\"${{secrets.resource_group_name}}\"" >> state.config

      - name: Terraform Init
        run: terraform init -backend-config="state.config"

      - name: Terraform plan
        if: inputs.skip_apply == true
        id: plan
        run: terraform plan -out=tfplan > /dev/null 2>&1

      - name: Terraform Apply
        if: inputs.skip_apply == false
        run: terraform apply -auto-approve
